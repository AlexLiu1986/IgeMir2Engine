http://bbs.tjwg.cn/viewthread.php?tid=35425&extra=page%3D1

5.合击书 不显示多少级学习

3全景小地图大一个坐标

10道道合击的动画跟着被锁定对象走

7.游戏内设置"音效开关"退出游戏后重新进入不保存之前的设置状态

10.盛大月灵行走的速度和人的速度是一样的 DB里调快(WALK_SPD-行走速度)后 作为怪物 就会很快
12.建议将4级烈火的3倍攻击取消 四级烈火攻击太高了


4级盾的样子什么时候能解决啊

3.挖取怪物进入触发时，QFunction-0.txt给予挖取物品检测包裹命令无效，即使包裹慢了也永远不提示包裹慢，还是继续挖，结果挖的不是触发给物品，而是 雷炎蛛王-item.txt 里面的物品，全都掉地上了！ 

5.背包内挖满火龙珠后,一共48个,点背包内任何一个都点不开,不能触发获得经验! (没办法双击)

进游戏把外挂上刺杀打个勾，然后砍怪不掉血，如果把勾去掉，砍的话就掉血


今天有玩家问我注册日期怎么写
日期格式1999/9/9，如果输入错误，无法注册
建议增加如果输入错误，弹出正确格式提示
我用的是商业登陆器黑版皮肤一，别的皮肤没测试


把英雄召唤出来 放他背包里1个麻痹
号在线10分钟 你把麻痹交易出去
在过3小时在上他号 就发现号里还有个麻痹
大概意思就是这样  你自己查查看

人物上线把英雄招出，在线20分钟以上
注装备不要放在人物包中放在英雄包中
过了20分钟在把装备放在人物中和人交易
就大退在过1小时上线，如果一小时没有，就小退一下，如果还没有，在过一小时上线

---------------------------------------------------------------------
3职业英雄都是与人物间隔≤2格距离，网篮是设置的是≤1格，能否设置成盛大一样！

功能：检测行会酒泉数
格式：CHECKGUILDFOUNTAINVALUE <,>,= 点数

8.脚本命令单此给予经验超过1亿时,M2的经验分配比例无效(非杀怪经验分配)

例如 我设置 头盔  勋章为 一种套装属性  设置 项链和手镯  是另一种套装属性
但是同时这些全部穿在身上后，只能显示出一种套装属性  也就是说不支持2套同时穿在身上显示出效果，别的引擎都支持啊，希望WL能改进这点  不支持 单件套装

2.挖取怪物进入触发时，QFunction-0.txt给予的挖取物品不是实物时（比如经验，金刚石），没有挖取获得物品的闪光效果 

BLUE的记路标石命令是TAGMAPMOVE

脚本加密什么时候能出批量加密的

4锁定别人的时候 自己应该先灰名

6杀人加诅咒的几率没有控制版

9.收英雄动作太慢了 效果都结束了 英雄还闪一下 才消失

8现在让英雄守护在别的地方 再去锁定别人 英雄过不来

7用英雄攻击别人后 收掉 别人的英雄不会过来打你

9分身现在不会灰名 现在主体和英雄打别人时灰名 但是分身出来的人 不会灰名 颜色是固定死了的


胖子:
3.毒英雄 英雄不会反击(需测试)

6.分身术分出来的分身 使用召唤强化卷 还能给它升级 死后可以看到名字是7级的颜色(需测试)

2.末日审判掉蓝太多 2000多点(需测试)

4.合击不到学2级的等级，就能把三级全给学了(需测试)


测试发现，对于普通怪，walk_spd 控制怪物行走速度，attack_spd控制物攻击速度 是有效的
但对人型 怪没用，人型怪的行走速度和攻击速度都取决于walk_spd 字段











游戏加速外挂分析以及制作

原理：加速外挂其实是修改时钟频率达到加速的目的 

首先我们建立一个过程，这个过程就是本程序的核心部份： 
procedure SetRing(value:word); stdcall; 
const ZDH = 03; // 设一个中断号 
var 
IDT : array [0..5] of byte; //保存IDT表 
OG : dword; //存放旧向量 
begIn 
asm 
push ebx 
sIdt IDT //读入中断描述符表 
mov ebx, dword ptr [idT+2] //IDT表基地址 
add ebx, 8*ZDH //计算中断在中断描述符表中的位置 
cli //关中断 
mov dx, word ptr [ebx+6] 
shl edx, 16d 
mov dx, word ptr [ebx] 
mov [OG], edx 
mov eax, offset @@Ring0 //指向Ring0级代码段 
mov word ptr [ebx], ax //低16位,保存在1,2位 
shr eax, 16d 
mov word ptr [ebx+6], ax //高16位，保存在6,7位 
Int ZDH //中断 
mov ebx, dword ptr [IDT+2] //重新定位 
add ebx, 8*ZDH 
mov edx, [OG] 
mov word ptr [ebx], dx 
shr edx, 16d 
mov word ptr [ebx+6], dx //恢复被改了的向量 
pop ebx 
jmp @@exitasm //到exitasm处 
@@Ring0: //Ring0,这个也是最最最核心的东东 
mov al, 34 //写入8253控制寄存器 
out 43,al 
mov ax,value　//写入定时值 
out 40,al //写定时值低位 
mov al,ah 
out 40,al //写定时值高位 
Iretd //返回 
@@exItasm: 
end; 
end; 
下面我们就试着用一下这个过程来做一个类似于“变速齿轮”的一个东东吧！ 
先加一个窗口，在窗口上放上一个trackbar控件把其Max设为20，Min设为1，把PositIon设为10，在这个控件的Change事件里写上： 

SetRing(strtoint(' '+inttostr(1742+(10-trackbar1.Position)*160))); 

因为wIndows默认的值为 1742，所以我们把1742做为基数，又因为值越小越快，反之越慢的原理，所以写了这样一个公式，好了，这就是“变速齿轮” 

